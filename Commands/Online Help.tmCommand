<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveActiveFile</string>
	<key>command</key>
	<string>#! /usr/bin/env ruby -w

$LOAD_PATH &lt;&lt; "#{ENV['TM_SUPPORT_PATH']}/lib"
$LOAD_PATH &lt;&lt; "#{ENV['TM_BUNDLE_SUPPORT']}/lib"
require 'web_preview'
require 'textmate'
require 'gnuplot_help'
include Gnuplot

word = ENV['TM_SELECTED_TEXT'] || ENV['TM_CURRENT_WORD']

help = convert(word)

html_header "Gnuplot Built-in Help"
  
# Print html/css/js header code
puts header

if help.nil?
  puts "&lt;div id=\"output\"&gt;No help found for #{word}"
else

  # If this is the case, then the next lines (until the end) need to be indented
  # and made into links.
  unless help.grep(/possible matches:$/).empty?

    puts "&lt;div id=\"output\"&gt;"
    puts "&lt;h2&gt;Ambiguous topic: '#{word}'&lt;/h2&gt;&lt;p&gt;Possible matches:&lt;/p&gt;&lt;ul&gt;"

    help.grep(/^(?&gt;\t\b(.*)\b$)/) do |word|
      puts "&lt;li&gt;&lt;a onClick=\'help(\"#{$1}\")\'&gt;#{$1}&lt;/a&gt;&lt;/li&gt;"
    end
    puts "&lt;/ul&gt;"
  else
    puts "&lt;div id=\"output\"&gt;"
    begin 
      puts TextMate::Markdown.to_html(help)
    rescue NameError
      require 'bluecloth'
      puts BlueCloth.new( help ).to_html( :markdown )
    end
  end
end
puts "&lt;/div&gt;"

# Standard footer
html_footer
</string>
	<key>fallbackInput</key>
	<string>word</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^h</string>
	<key>name</key>
	<string>Documentation for Current Word</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>scope</key>
	<string>source.gnuplot</string>
	<key>uuid</key>
	<string>26A04D04-F5BE-4659-AD78-FFD0AEB38FD7</string>
</dict>
</plist>
